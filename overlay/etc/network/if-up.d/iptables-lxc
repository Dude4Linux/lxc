#!/bin/bash

# append iptables rule at end of table, unless it exists
iptables_add() {
    args=$@
    if ! iptables -C $args >/dev/null 2>&1; then iptables -A $args; fi
}

# insert iptables rule at top of table, unless it exists
iptables_insert() {
    args=$@
    if ! iptables -C $args >/dev/null 2>&1; then iptables -I $args; fi
}

cidr() {
    ip route list scope link dev $1 | sed -rn '{ s/^(\S+).*/\1/p }'
    return
}

#Creating default policies
iptables -P INPUT DROP
iptables -P OUTPUT ACCEPT
iptables -P FORWARD DROP # we're not a router

if [ "$IFACE" = "lo" ]; then
    # Drop invalid packets
    iptables_add INPUT -m state --state INVALID -j DROP
    # Allow traffic on loopback
    iptables_add INPUT  -i lo -j ACCEPT
    # Allow connections to apt-cacher-ng from containers, reject others
    iptables_add INPUT -i br0 -p tcp --dport 3142 -j ACCEPT
    iptables_add INPUT -i natbr0 -p tcp --dport 3142 -j ACCEPT
    iptables_add INPUT -p tcp --dport 3142  -j REJECT --reject-with tcp-reset
    iptables_add INPUT -p tcp --dport 3142  -j DROP
    # Allow established connections to continue
    iptables_add INPUT   -m state --state ESTABLISHED,RELATED -j ACCEPT
    iptables_add FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
fi

if [ "$IFACE" = "br0" ]; then
    CIDR=$(cidr br0)
    # Accept all packets from br0 containers
    iptables_add INPUT   -s $CIDR -i br0 -j ACCEPT
    iptables_add FORWARD -s $CIDR -i br0 -m conntrack --ctstate NEW -j ACCEPT
fi

if [ "$IFACE" = "natbr0" ]; then
    CIDR=$(cidr natbr0)
    # Drop external connections to natbr0 containers
    iptables_insert FORWARD -d 192.168.121.0/24 -p tcp -m conntrack --ctstate NEW -j DROP
    # Drop external pings to natbr0 containers
    iptables_insert FORWARD -d 192.168.121.0/24 -p icmp -m icmp --icmp-type 8 -j DROP
    # Accept all packets from natbr0 containers
    iptables_add INPUT   -s $CIDR -i natbr0 -j ACCEPT
    iptables_add FORWARD -s $CIDR -i natbr0  -m conntrack --ctstate NEW -j ACCEPT
    # Accept broadcasts from DHCP
    iptables_add INPUT   -i natbr0 -p udp -m udp --sport 68 --dport 67 -j ACCEPT #DHCP
    # Masquerade natbr0 containers
    iptables_add POSTROUTING -t nat -s $CIDR ! -d $CIDR -j MASQUERADE
    # Correct checksums for bootpc
    iptables_add POSTROUTING -t mangle -o natbr0 -p udp --dport bootpc -j CHECKSUM --checksum-fill
fi

