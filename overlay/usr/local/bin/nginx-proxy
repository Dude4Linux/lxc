#!/bin/bash -e
# Copyright (c) Alon Swartz <alon@turnkeylinux.org>

info() { echo "INFO: $@"; }
fatal() { echo "FATAL: $@" 1>&2; exit 1; }

usage() {
cat<<EOF
Syntax: $(basename $0) domain container
Create site configuration to proxy requests destined for domain to container

Arguments::

    domain      source domain
    container   destination container name

Example::

    $(basename $0) www.example.com wordpress

Notes::

    # delete/disable site configuration for domain
    rm -f /etc/nginx/sites-*/DOMAIN; /etc/init.d/nginx/reload

    # template (preconfigured for 80, 443, 12320, 12321, 12322)
    /etc/nginx/sites-available/container.tmpl

EOF
exit 1
}

if [[ "$#" != "2" ]]; then
    usage
fi

domain=$1
container=$2

template=/etc/nginx/sites-available/container.tmpl
container_rootfs=/var/lib/lxc/$container/rootfs
site_enabled=/etc/nginx/sites-enabled/$domain
site_available=/etc/nginx/sites-available/$domain

[ -e "$template" ] || fatal "does not exist: $template"
[ -e "$site_enabled" ] && fatal "already exists: $site_enabled"
[ -e "$site_available" ] && fatal "already exists: $site_available"
[ -e "$container_rootfs" ] || fatal "does not exist: $container_rootfs"

container_cert="etc/ssl/certs/cert.crt"
container_key="etc/ssl/certs/cert.key"
# note: must use actual locations because symlink outside container
#       points to host cert, not container cert
[ -f "${container_rootfs}/${container_cert}" ] || container_cert="usr/local/share/ca-certificates/cert.crt"
[ -f "${container_rootfs}/${container_key}" ] ||  container_key="etc/ssl/private/cert.key"
[ -f "${container_rootfs}/${container_cert}" ] || fatal "can't find $container cert"
[ -f "${container_rootfs}/${container_key}" ] ||  fatal "can't find $container key"

cp $template $site_available
sed -i "s|DOMAIN|$domain|" $site_available
sed -i "s|CONTAINER|$container|" $site_available
sed -i "s|CERT|${container_cert}|" $site_available
sed -i "s|KEY|${container_key}|" $site_available

ln -s $site_available $site_enabled
/etc/init.d/nginx reload

info "created $site_enabled"

